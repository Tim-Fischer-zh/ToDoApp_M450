name: Build, Test & Deploy

on:
  push:
    branches:
      - '**'  # Run on all branches
  pull_request:
    branches:
      - '**'
  workflow_dispatch:

env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

jobs:
  build:
    name: Build Docker Images
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Clean Docker build cache
        run: |
          docker builder prune -af

      - name: Build API Docker image
        run: |
          docker build -f TodoApi/Dockerfile -t todoapi:${{ github.sha }} .

      - name: Build Nginx Docker image
        run: |
          docker build -f deploy/nginx/Dockerfile -t todoapi-web:${{ github.sha }} .

  test:
    name: Run Tests
    runs-on: self-hosted
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run tests in Docker
        run: |
          docker build --target test -f TodoApi/Dockerfile -t todoapi-test:${{ github.sha }} .

  deploy:
    name: Deploy to Production
    runs-on: self-hosted
    needs: [build, test]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Tag images for deployment
        run: |
          docker tag todoapi:${{ github.sha }} todoapi:latest
          docker tag todoapi-web:${{ github.sha }} todoapi-web:latest

      - name: Stop existing containers
        run: |
          docker compose --profile prod down || true

      - name: Remove old images to force recreation
        run: |
          docker rmi todoapi:latest todoapi-web:latest || true

      - name: Re-tag images after removal
        run: |
          docker tag todoapi:${{ github.sha }} todoapi:latest
          docker tag todoapi-web:${{ github.sha }} todoapi-web:latest

      - name: Start services
        env:
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          DOTNET_ENVIRONMENT: Production
        run: docker compose --profile prod up -d

      - name: Wait for services to start
        run: |
          echo "Waiting for services to start..."
          sleep 20
          echo "Services started!"

      - name: Verify deployment
        run: |
          echo "Checking all services..."
          docker compose --profile prod ps

          echo "Deployment complete!"

      - name: Cleanup old images
        run: |
          docker image prune -f

      - name: Show service logs (last 50 lines)
        if: always()
        run: |
          docker compose --profile prod logs --tail=50
